# Write a comprehensive bug report, gather information and notify the QA team
- title: Report a bug
  args:
    description: Description of the bug
    steps_to_reproduce: Steps to reproduce the bug
    observed_behavior: Observed behavior of the bug
    expected_behavior: Expected behavior of the bug
    relevant_files: Relevant files to the bug
  instructions: |
    Report a bug by doing the following:
    
    1. Read the relevant files to understand the bug
    2. Create a new issue on Github with the following details:
      - The given description
      - Steps to reproduce the bug
      - Observed behavior and expected behavior
      - Technical details based on what you found in the files
    3. Post a notification in the #qa-team Slack channel with a link to the issue
  result: Links to the Github issue and the Slack message

- title: Generate a beautiful HTML page
  args:
    content: Content of the page
    purpose: What the page does
    file_path: Path into which the page will be saved
  instructions: |
    1. Search the internet for the latest BulmaCSS CDN version
    2. Generate a self-contained HTML page that combines the given content with BulmaCSS
    3. Write the HTML page to the given file path
    
    When generating the page, follow these rules:
    
    - Use the latest BulmaCSS version
    - Organize the content in a visually appealing way using Bulma components
    - Use FA icons and emojis to make the page more engaging
    - Make full use of Bulma CSS classes to style the page

- title: Gather project information from a directory
  args:
    directory: Path to the directory
  instructions: |
    We want to know more about this project, in particular one directory. The kind of info we are looking for includes:
     
    - Programming languages used
    - Usage of specific frameworks or libraries
    - Project structure and organization
    - Relevance of the directory in the context of the project
    
    Gather the information by doing the following:
    
    1. List all files in the given directory
    2. Read one or two files that could provide more information
    3. From the data you collected, deduce the information we are looking for

  result: |
    A concise list of compact bullet points, each containing a piece of information about the project. Examples:
    - Directory contains Django app
    - Dependencies in `requirements.txt`
    - `src` directory contains the main project code

- title: Write a new knowledge file
  args:
    tech_stack: Ultra-short description of the tech stack
    project_structure: ASCII representation of the project structure with short explanations
    build_and_run: How the project is built and run
    testing: How the project is tested
    additional_info: Anything else that is important
  instructions: |
    We want to write a new knowledge file. The purpose of this file is to provide an entry point 
    when looking for information about the project.
    
    Template:
    ```markdown
    # <project name>
    Project <name> is a <what is it> that solves <problem> for <persona> by <how it does it>.
    
    ## Project Structure
    <ASCII representation of the project structure with short explanations>
    
    ## <section header>
    <3-4 concise bullet points>
    
    ...
    ```
    
    Use the template and write a new knowledge file for the project by doing the following:
    
    1. Break down the information into 4-6 sections
    2. Write each section with a 1-2 word header and 3-4 concise bullet points
    3. Use ASCII art to represent the project structure
    4. Write the file into `.pilot-hints.md` in the project root directory
  result: Only say "Now I know more about the project"